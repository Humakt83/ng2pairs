{"version":3,"sources":["webpack:///./boot.ts","webpack:///./example.module.ts","webpack:///./src/difficulty.ts","webpack:///./src/game/game.component.ts","webpack:///./src/pairs.module.ts","webpack:///./src/safestyle.pipe.ts","webpack:///./src/settings/settings.component.ts","webpack:///. async","webpack:///./src/gamemode.ts","webpack:///./src/pairs.component.ts","webpack:///./src/pairs.service.ts","webpack:///./src/pairs.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { ExampleModule } from './example.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(ExampleModule);\n\n\n// WEBPACK FOOTER //\n// ./boot.ts","import { NgModule }       from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { PairsModule } from 'src/pairs.module';\nimport { PairsComponent } from 'src/pairs.component';\n\n@NgModule({\n    declarations: [],\n    imports: [BrowserModule, FormsModule, PairsModule.forRoot()],\n    bootstrap: [PairsComponent]\n})\nexport class ExampleModule {}\n\n\n// WEBPACK FOOTER //\n// ./example.module.ts","export enum Difficulty {\n    EASY, NORMAL, HARD\n}\n\n\n// WEBPACK FOOTER //\n// ./src/difficulty.ts","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Pairs } from '../pairs';\nimport { Piece, PairsService } from '../pairs.service';\n\n@Component({\n    selector: 'game',\n    template: `\n        <div  *ngIf=\"activePlayer\">\n            <div class=\"player\" *ngFor=\"let player of players\" [class.highlightPlayer]=\"activePlayer===player\">\n                {{player.name}} score: {{player.score}}\n            </div>\n        </div>\n\n        <div>\n            <table>\n                <tr *ngFor=\"let row of pieceTable\">\n                    <td *ngFor=\"let column of row\" (click)=\"click(column)\">\n                        <div *ngIf=\"!column.image || !column.turned\" [style.background]=\"(column.turned ? 'linear-gradient(to left, ' + column.color1 + ', ' + column.color2 + ')' : 'linear-gradient(to top, black, gray, black') | safeCSS\"></div>\n                        <div *ngIf=\"column.image && column.turned\">\n                            <img [src]=\"column.image\">\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"gameOver\" *ngIf=\"gameOver\">\n            {{activePlayer ? activePlayer.name + ' is victorious!': 'Congratulations! You are victorious.'}}\n            <br>            \n        </div>\n\n        <div class=\"clicks\"> {{clicks}} clicks </div>\n        <div class=\"pairsButton\" (click)=\"backToMain()\">Back to Main</div>\n    `,\n    styles: [`\n        .pairsButton {\n            padding: 5px;\n            color: rgb(255,255,200);\n            font-size: x-large;\n            font-weight: bold;\n            background: linear-gradient(to left top, black, black, black, white);\n            margin-right: 5px;\n            border: 3px solid black;\n            border-radius: 15px;\n            display: inline-block;\n            text-align: center;\n            cursor: pointer;\n        }\n\n        .pairsButton:hover {\n            color: black;\n            background: linear-gradient(to left top, white, white, white, black);\n        }\n\n        .pairsButtonSelected {\n            background: linear-gradient(to left top, white, white, white, black);\n            color: black;\n        }\n\n        .pairsButtonSelected:hover {\n            color: rgb(255,255,200);;\n            background: linear-gradient(to left top, black, black, black, white);\n        }\n\n        .pairs {\n            text-align: center;\n        }\n        div {\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n            position: relative;\n            display: table;\n        }\n\n        .player {\n            display: inline-block;\n            background: linear-gradient(to left top, white, white, white, rgb(130, 150, 235));\n            color: black;\n            border: 1px solid black;\n            border-radius: 5px;\n            font-weight: bolder;\n            padding-left: 5px;\n            padding-right: 5px;\n            margin-right: 2px;\n        }\n\n        .highlightPlayer {\n            background: linear-gradient(to left top, rgb(235, 255, 70), rgb(235, 255, 70), rgb(235, 255, 70), rgb(130, 150, 235));\n        }\n\n        table {\n            text-align: center;\n        }\n\n        td {\n            width: 75px;\n            height: 75px;\n            border: 1px solid black;\n            cursor: pointer;\n            padding: 0;\n        }\n\n        td div {\n            width: inherit;\n            height: inherit;\n        }\n\n        img {\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n        }\n\n        td.found {\n            cursor: default;\n        }\n\n        .clicks,\n        .gameOver {\n            background: linear-gradient(to left top, white, white, white, rgb(130, 150, 235));\n            border: 1px solid black;\n            border-radius: 5px;\n            color: black;\n            font-weight: bolder;\n            padding-left: 8px;\n            padding-right: 8px;\n            margin-top: 5px;\n        }\n\n        .gameOver {\n            font-size: x-large;\n        }\n    `]\n})\nexport class GameComponent implements OnInit {\n\n    @Input() pairs: Pairs;\n    pieces: Piece[] = [];\n    pieceTable: Piece[][];\n    clickedPieces: Piece[] = [];\n    clicks: number = 0;\n    gameOver: boolean = false;\n    activePlayer: Player;\n    players: Player[] = [];\n\n    @Output() toMain = new EventEmitter();\n\n    constructor(private pairsService: PairsService) {}\n\n    ngOnInit() {        \n        this.generatePieces();\n        if (this.pairs.playerNames.length > 1) {\n            this.players = this.pairs.playerNames.map(n => new Player(n));\n            this.activePlayer = this.players[0];\n        }\n    }\n\n    click(piece: Piece) {\n        if (piece.found) return;\n        this.clicks++;\n        if (this.clickedPieces.length > 1) {\n            this.clickedPieces.forEach(p => p.turned = false);\n            this.clickedPieces = [];\n        }\n        piece.turned = true;\n        this.clickedPieces.push(piece);\n        if (this.clickedPieces.length === 2) {\n            if (this.clickedPieces[0].pair === piece) {\n                this.clickedPieces.forEach(p => p.found = true);\n                this.clickedPieces = [];\n                if (this.activePlayer) {\n                    this.activePlayer.score++;\n                }\n            } else {\n                this.setNextActivePlayer();\n            }\n        }\n        this.checkGameStatus();\n    }\n\n    backToMain() {\n        this.toMain.emit(true);\n    }\n\n    private generatePieces() {\n        const tableModifier: number = this.pairs.getNumberOfPieces() > 10 && (this.pairs.getNumberOfPieces() * 2) % 10 === 0 ? 10 : 5;\n        this.pieces = this.pairsService.generatePieces(this.pairs.getNumberOfPieces());\n        this.pieceTable = Array((this.pairs.getNumberOfPieces() * 2) / tableModifier);\n        for (let x = 0; x < this.pieceTable.length; x++) {\n            this.pieceTable[x] = [];\n            for (let y = 0; y < tableModifier; y++) {\n                this.pieceTable[x].push(this.pieces[(x*tableModifier)+y])\n            }\n        }\n    }\n\n    private setNextActivePlayer() {\n        if (this.activePlayer) {\n            let index = this.players.indexOf(this.activePlayer) + 1;            \n            this.activePlayer = this.players[index >= this.players.length ? 0 : index];\n        }\n    }\n\n    private checkGameStatus() {\n        if (this.pieces.filter(p => !p.found).length < 1) {\n            this.gameOver  = true;\n        }\n    }\n    \n}\n\nclass Player {\n\n    score: number = 0;\n\n    constructor(public name: string) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/game.component.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport 'rxjs/Rx';\nimport { PairsComponent } from './pairs.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { GameComponent } from './game/game.component';\nimport { SafeStylePipe } from './safestyle.pipe';\nimport { PairsService } from './pairs.service';\n\n@NgModule({\n    declarations: [PairsComponent, SettingsComponent, GameComponent, SafeStylePipe],\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    providers: [PairsService],\n    exports: [PairsComponent]\n})\nexport class PairsModule {\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: PairsModule,\n            providers: [PairsService]\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pairs.module.ts","import { Pipe } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({name: 'safeCSS'})\nexport class SafeStylePipe {\n\n    constructor(public sanitizer: DomSanitizer){}\n\n    transform(style: string) {\n        return this.sanitizer.bypassSecurityTrustStyle(style);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/safestyle.pipe.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { GameMode } from '../gamemode';\nimport { Difficulty } from '../difficulty';\nimport { Pairs } from '../pairs';\n\n@Component({\n    selector: 'settings',\n    template: `\n        <div class=\"pairsButton\" [class.pairsButtonSelected]=\"selectedDifficulty === difficulty.EASY\" (click)=\"selectDifficulty(difficulty.EASY)\">EASY</div>\n        <div class=\"pairsButton\" [class.pairsButtonSelected]=\"selectedDifficulty === difficulty.NORMAL\" (click)=\"selectDifficulty(difficulty.NORMAL)\">NORMAL</div>\n        <div class=\"pairsButton\" [class.pairsButtonSelected]=\"selectedDifficulty === difficulty.HARD\" (click)=\"selectDifficulty(difficulty.HARD)\">HARD</div>\n        <div *ngIf=\"mode === modes.MULTI\" class=\"playerInputs\">    \n            <div class=\"playerInput\" *ngFor=\"let player of players; let id = index\">\n                <label>Player {{id + 1}}</label>\n                <input (blur)=\"players[id] = $event.target.value\" [ngModel]=\"players[id]\">\n            </div>\n            <div class=\"playerButton\" alt=\"Add player\" (click)=\"addPlayer()\">+</div>\n            <div class=\"playerButton\" alt=\"Remove player\" (click)=\"removePlayer()\">-</div>\n        </div>\n        <div class=\"pairsButton\" (click)=\"start()\">START</div>\n    `,\n    styles: [`\n        .pairsButton {\n            padding: 5px;\n            color: rgb(255,255,200);\n            font-size: x-large;\n            font-weight: bold;\n            background: linear-gradient(to left top, black, black, black, white);\n            margin-right: 5px;\n            border: 3px solid black;\n            border-radius: 15px;\n            display: inline-block;\n            text-align: center;\n            cursor: pointer;\n        }\n\n        .pairsButton:hover {\n            color: black;\n            background: linear-gradient(to left top, white, white, white, black);\n        }\n\n        .pairsButtonSelected {\n            background: linear-gradient(to left top, white, white, white, black);\n            color: black;\n        }\n\n        .pairsButtonSelected:hover {\n            color: rgb(255,255,200);;\n            background: linear-gradient(to left top, black, black, black, white);\n        }\n\n        .pairs {\n            text-align: center;\n        }\n\n        .playerInputs {\n            display: table;    \n            width: 100%;\n            margin-top: 5px;\n        }\n\n        .playerInput {\n            display: table-row;\n            text-align: center;\n            vertical-align: middle;\n            margin-bottom: 3px;\n        }\n\n        input {\n            width: 200px;    \n        }\n\n        label {\n            font-size: smaller;\n            font-weight: bolder;\n            padding-right: 3px;\n        }\n\n        .playerButton {\n            margin-top: 2px;\n            padding-left: 5px;\n            padding-right: 5px;\n            color: rgb(255,255,200);\n            font-size: large;\n            font-weight: bold;\n            background: linear-gradient(to left top, rgb(130, 150, 235), rgb(130, 150, 235), rgb(130, 150, 235), white);\n            margin-right: 5px;\n            border: 2px solid black;\n            border-radius: 15px;\n            display: inline-block;\n            text-align: center;\n            cursor: pointer;\n            width: 12px;\n        }\n        .playerButton:hover {\n            color: black;\n            background: linear-gradient(to left top, white, white, white, rgb(130, 150, 235));\n        }`]\n})\nexport class SettingsComponent {\n\n    @Input() mode: GameMode;\n\n    @Output() game: EventEmitter<Pairs> = new EventEmitter<Pairs>();\n\n    modes = GameMode;\n\n    selectedDifficulty: Difficulty = Difficulty.NORMAL;\n\n    difficulty = Difficulty;\n\n    players: string[] = ['Player 1', 'Player 2'];\n\n    addPlayer() {\n        this.players.push('Player ' + (this.players.length + 1));\n    }\n\n    removePlayer() {\n        if (this.players.length > 1) {\n            this.players.pop();\n        }\n    }\n\n    selectDifficulty(difficulty: Difficulty) {\n        this.selectedDifficulty = difficulty;\n    }\n\n    start() {\n        if (this.mode !== GameMode.MULTI || this.players.length > 1) {\n            let players = this.mode === GameMode.MULTI ? this.players : [this.players[0]];\n            this.game.emit(new Pairs(players, this.selectedDifficulty));\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/settings/settings.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// . async\n// module id = 78\n// module chunks = 1","export enum GameMode {\n    MULTI, SINGLE\n}\n\n\n// WEBPACK FOOTER //\n// ./src/gamemode.ts","import { Component } from '@angular/core';\nimport { GameMode } from './gamemode';\nimport { Pairs } from './pairs';\n\n@Component({\n    selector: 'pairs',\n    template: `<div class=\"pairs\">\n                <div *ngIf=\"selectGameMode\">\n                    <div class=\"pairsButton\" (click)=\"toSettings(${GameMode.SINGLE})\">SINGLE</div>\n                    <div class=\"pairsButton\" (click)=\"toSettings(${GameMode.MULTI})\">MULTI</div>\n                </div>\n                <settings *ngIf=\"!selectGameMode && !gameStarted\" [mode]=\"selectedGameMode\" (game)=\"startGame($event)\"></settings>\n                <game *ngIf=\"gameStarted\" [pairs]=\"pairs\" (toMain)=\"selectGameMode = true; gameStarted = false\"></game>\n            </div>`,\n    styles: [`\n        .pairsButton {\n            padding: 5px;\n            color: rgb(255,255,200);\n            font-size: x-large;\n            font-weight: bold;\n            background: linear-gradient(to left top, black, black, black, white);\n            margin-right: 5px;\n            border: 3px solid black;\n            border-radius: 15px;\n            display: inline-block;\n            text-align: center;\n            cursor: pointer;\n        }\n\n        .pairsButton:hover {\n            color: black;\n            background: linear-gradient(to left top, white, white, white, black);\n        }\n\n        .pairsButtonSelected {\n            background: linear-gradient(to left top, white, white, white, black);\n            color: black;\n        }\n\n        .pairsButtonSelected:hover {\n            color: rgb(255,255,200);;\n            background: linear-gradient(to left top, black, black, black, white);\n        }\n\n        .pairs {\n            text-align: center;\n        }`]\n})\nexport class PairsComponent {\n\n    selectGameMode : boolean = true;\n    selectedGameMode : GameMode;\n    gameStarted: boolean = false;\n    pairs: Pairs;\n\n    toSettings(mode: GameMode) {\n        this.selectGameMode = false;\n        this.selectedGameMode = mode;\n    }\n\n    startGame(pairs: Pairs) {\n        this.pairs = pairs;\n        this.gameStarted = true;        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pairs.component.ts","import { Injectable } from '@angular/core';\n\nconst COLOR_PREFIX: string = 'rgb';\nconst COLORS: string[] = ['(0,0,0)', '(50, 50, 50)', '(100, 100, 100)', '(150, 150, 150)', '(200, 200, 200)', '(250, 250, 250)',\n                        '(0, 50, 50)', '(0, 100, 100)', '(0, 150, 150)', '(0, 200, 200)', '(0, 250, 250)',\n                        '(50, 50, 0)', '(100, 100, 0)', '(150, 150, 0)', '(200, 200, 0)', '(250, 250, 0)',\n                        '(50, 0, 50)', '(100, 0, 100)', '(150, 0, 150)', '(200, 0, 200)', '(250, 0, 250)',\n                        '(0, 0, 50)', '(0, 0, 100)', '(0, 0, 150)', '(0, 0, 200)', '(0, 0, 250)',\n                        '(0, 50, 0)', '(0, 100, 0)', '(0, 150, 0)', '(0, 200, 0)', '(0, 250, 0)',\n                        '(50, 0, 0)', '(100, 0, 0)', '(150, 0, 0)', '(200, 0, 0)', '(250, 0, 0)']\n\n@Injectable()\nexport class PairsService {\n\n    private pairImages: string[] = [];\n\n    setImages(images: string[]) {\n        this.pairImages = images;\n    }\n\n    generatePieces(piecesAmount: number): Piece[] {\n        let pieces: Piece[] = [];\n        for (let i = 0; i < piecesAmount && this.pairImages.length > i; i++) {\n            let piece = new ImagePiece(this.pairImages[i]);\n            let pair = new ImagePiece(this.pairImages[i], piece);\n            pieces.push(piece);\n            pieces.push(pair);\n        }\n        const amountLeft = pieces.length > 0 ? piecesAmount - (pieces.length / 2) : piecesAmount;\n        pieces = pieces.concat(this.generateColorPieces(amountLeft));\n        pieces = this.shufflePieces(pieces);\n        return pieces;\n    }\n\n    private generateColorPieces(amountLeft: number): Piece[] {\n        let pieces: ColorPiece[] = [];\n        for (let i = 0; i < amountLeft; i++) {\n            let piece: ColorPiece;\n            do {                \n                piece = new ColorPiece(this.generateColor(), this.generateColor());                \n            } while (pieces.filter(p => p.color1 === piece.color1 && p.color2 === piece.color2).length > 0);\n            let pair = new ColorPiece(piece.color1, piece.color2, piece);\n            pieces.push(piece);\n            pieces.push(pair);\n        }\n        return pieces;\n    }\n\n    private generateColor(): string {\n        return COLOR_PREFIX + COLORS[Math.floor(Math.random() * COLORS.length)];\n    }\n\n    private shufflePieces(array: Piece[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n\n}\n\nexport abstract class Piece {\n\n    turned: boolean = false;\n    found: boolean = false;\n    pair: Piece;\n    \n    constructor(pair: Piece = undefined) {\n        if (pair) {\n            this.pair = pair;\n            pair.pair = this;\n        }\n    }\n\n}\n\nexport class ImagePiece extends Piece {\n\n    constructor(public image: string, pair: Piece = undefined) {\n        super(pair);\n    }\n}\n\nexport class ColorPiece extends Piece {\n    \n    constructor(public color1: string, public color2: string, pair: Piece = undefined) {\n        super(pair);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pairs.service.ts","import { Difficulty } from './difficulty';\n\n\nexport class Pairs {\n\n    constructor(public playerNames: string[], public difficulty: Difficulty) {}\n\n    getNumberOfPieces(): number {\n        const mpModifier = this.playerNames.length > 1 ? 3 : 1;\n        return (this.difficulty + 1) * 5 * mpModifier;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pairs.ts"],"sourceRoot":""}